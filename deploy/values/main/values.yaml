global:
  env: main
# enable Blockscout deploy
blockscout:
  app: blockscout
  enabled: true
  image:
    _default: blockscout/blockscout:latest
  replicas:
    app: 1
  docker:
    port: 80
    targetPort: 4000
  # init container
  init:
    enabled: true
    image:
      _default: blockscout/blockscout:latest
  service:
    # ClusterIP, NodePort or LoadBalancer
    type: ClusterIP
  # enable ingress
  ingress:
    enabled: true
    annotations: {}
      # - 'nginx.ingress.kubernetes.io/rewrite-target: /$2'
    host:
      _default: blockscout.test.blockscout.aws-k8s.blockscout.com
    # enable https
    #
    tls:
      enabled: true
    path:
      prefix:
        # - "/poa/sokol(/|$)(.*)"
        - "/"
  # probes
  livenessProbe:
    enabled: true
    path: /
  readinessProbe:
    enabled: true
    path: /
  resources:
    limits:
      memory:
        _default: "4Gi"
      cpu:
        _default: "3"
    requests:
      memory:
        _default: "4Gi"
      cpu:
        _default: "3"
  # enable service to connect to RDS
  rds:
    enabled: false
    endpoint:
      _default: <endpoint>.<region>.rds.amazonaws.com
  # node label
  nodeSelector:
    enabled: true
    app: blockscout
  # Blockscout environment variables
  environment:
    ETHEREUM_JSONRPC_TRACE_URL:
      # _default: http://geth-svc:8545
      _default: http://geth-svc.goerli.svc.cluster.local:8545
    ETHEREUM_JSONRPC_HTTP_URL:
      # _default: http://geth-svc:8545
      _default: http://geth-svc.goerli.svc.cluster.local:8545
    ETHEREUM_JSONRPC_WS_URL:
      # _default: ws://geth-svc:8546
      _default: ws://geth-svc.goerli.svc.cluster.local:8546
    BLOCKSCOUT_VERSION:
      _default: v4.1.8-beta
    ECTO_USE_SSL:
      _default: 'false'
    ETHEREUM_JSONRPC_VARIANT:
      _default: geth
    HEART_BEAT_TIMEOUT:
      _default: 30
    SHOW_PRICE_CHART:
      _default: false
    CACHE_BLOCK_COUNT_PERIOD:
      _default: 7200
    PORT:
      _default: 4000
    SUBNETWORK:
      _default: Ethereum
    HEALTHY_BLOCKS_PERIOD:
      _default: 60
    NETWORK:
      _default: (Goerli)
    NETWORK_ICON:
      _default: _network_icon.html
    COIN:
      _default: ETH
    COIN_NAME:
      _default: ETH
    LOGO:
      _default: /images/goerli_logo.svg
    HISTORY_FETCH_INTERVAL:
      _default: 60
    TXS_HISTORIAN_INIT_LAG:
      _default: 0
    TXS_STATS_DAYS_TO_COMPILE_AT_INIT:
      _default: 1
    COIN_BALANCE_HISTORY_DAYS:
      _default: 90
    GAS_PRICE_ORACLE_NUM_OF_BLOCKS:
      _default: 200
    GAS_PRICE_ORACLE_SAFELOW_PERCENTILE:
      _default: 35
    GAS_PRICE_ORACLE_AVERAGE_PERCENTILE:
      _default: 60
    GAS_PRICE_ORACLE_FAST_PERCENTILE:
      _default: 90
    GAS_PRICE_ORACLE_CACHE_PERIOD:
      _default: 300
    POOL_SIZE:
      _default: 20
    DISPLAY_TOKEN_ICONS:
      _default: 'true'
    FETCH_REWARDS_WAY:
      _default: manual
    INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER:
      _default: 'true'
    SHOW_TESTNET_LABEL:
      _default: 'true'
    CHAIN_ID:
      _default: 5
    ENABLE_RUST_VERIFICATION_SERVICE:
      _default: 'true'
    RUST_VERIFICATION_SERVICE_URL:
      _default: http://sc-verifier-svc:8043
    INDEXER_MEMORY_LIMIT:
      _default: 3
    ACCOUNT_ENABLED:
      _default: 'true'
    API_V2_ENABLED:
      _default: 'true'
    APPS_MENU:
      _default: 'true'
    APPS:
      _default: '[{"title": "Marketplace", "url": "/apps", "embedded?": true}]'

postgres:
  enabled: true
  image: postgres:13.8
  port: 5432

  command: '["docker-entrypoint.sh", "-c"]'
  args: '["max_connections=300"]'

  strategy: Recreate

  resources:
    limits:
      memory:
        _default: "1Gi"
      cpu:
        _default: "1"
    requests:
      memory:
        _default: "1Gi"
      cpu:
        _default: "1"

  environment:
    POSTGRES_USER:
      _default: 'postgres'
    POSTGRES_HOST_AUTH_METHOD:
      _default: 'trust'
# enable geth deploy
geth:
  enabled: false
  image:
    _default: ethereum/client-go:stable
  replicas:
    app: 1
  ports:
    http:
      number: 8545
      protocol: TCP
    ws:
      number: 8546
      protocol: TCP
    auth:
      number: 8551
      protocol: TCP
  command:
    - /bin/sh
    - -c
    - |-
      /root/init.sh --fakepow --dev --dev.period=1 --datadir=/root/.ethereum/devnet --keystore=/root/.ethereum/devnet/keystore --password=/root/password.txt --unlock=0 --unlock=1 --mine --miner.threads=1 --miner.etherbase=0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266 --ipcpath=/root/geth.ipc --http --http.vhosts=* --http.addr=0.0.0.0 --http.port=8545 --http.api=eth,net,web3,debug,txpool --ws --ws.origins=* --ws.addr=0.0.0.0 --ws.port=8546 --ws.api=eth,net,web3,debug,txpool --graphql --graphql.corsdomain=* --allow-insecure-unlock --rpc.allow-unprotected-txs --http.corsdomain=* --vmdebug --networkid=1337 --rpc.txfeecap=0
  environment: {}
  persistence:
    enabled: false
  resources:
    limits:
      memory:
        _default: "2Gi"
      cpu:
        _default: "0.2"
    requests:
      memory:
        _default: "2Gi"
      cpu:
        _default: "0.2"
  # node label
  nodeSelector:
    enabled: true
    app: blockscout
  service:
    # ClusterIP, NodePort or LoadBalancer
    type: ClusterIP
  # enable ingress
  ingress:
    enabled: true
    host:
      _default: node.test.aws-k8s.blockscout.com
    # enable https
    tls:
      enabled: false
  jwt:
    enabled: false
  files:
    enabled: true
# geth:
#   enabled: true
#   image:
#     _default: ethereum/client-go:stable
#   replicas:
#     app: 1
#   portHttp: 8545
#   portWs: 8546
#   portAuth: 8551
#   command:
#     - /bin/sh
#     - -c
#     - |-
#       /root/init.sh --fakepow --dev --dev.period=1 --datadir=/root/.ethereum/devnet --keystore=/root/.ethereum/devnet/keystore --password=/root/password.txt --unlock=0 --unlock=1 --mine --miner.threads=1 --miner.etherbase=0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266 --ipcpath=/root/geth.ipc --http --http.vhosts=* --http.addr=0.0.0.0 --http.port=8545 --http.api=eth,net,web3,debug,txpool --ws --ws.origins=* --ws.addr=0.0.0.0 --ws.port=8546 --ws.api=eth,net,web3,debug,txpool --graphql --graphql.corsdomain=* --allow-insecure-unlock --rpc.allow-unprotected-txs --http.corsdomain=* --vmdebug --networkid=1337 --rpc.txfeecap=0
#   # command: '["geth"]'
#   # args: '["--goerli", "--datadir=/.ethereum", "--gcmode=archive", "--http", "--http.vhosts=*", "--http.addr=0.0.0.0", "--http.port=8545", "--http.api=eth,net,web3,debug,txpool", "--ws", "--ws.origins=*", "--ws.addr=0.0.0.0", "--ws.port=8546", "--ws.api=eth,net,web3,debug,txpool", "--allow-insecure-unlock", "--rpc.allow-unprotected-txs", "--http.corsdomain=*", "--vmdebug", "--rpc.txfeecap=0"]'
#   environment: {}
#   persistence:
#     enabled: true
#     mountPath: /geth
#     storageClass: gp3-new
#     storage: 1000Gi
#   resources:
#     limits:
#       memory:
#         _default: "8Gi"
#       cpu:
#         _default: "2"
#     requests:
#       memory:
#         _default: "8Gi"
#       cpu:
#         _default: "2"
#   # node label
#   nodeSelector:
#     enabled: true
#     app: blockscout
#   service:
#     # ClusterIP, NodePort or LoadBalancer
#     type: ClusterIP
#   # enable ingress
#   ingress:
#     enabled: true
#     host:
#       _default: node.test.blockscout.aws-k8s.blockscout.com
#     # enable https
#     tls:
#       enabled: false
#   jwt:
#     enabled: true
#     mountPath: /geth/geth/jwtsecret
#   files:
#     enabled: false
#   # enable client deploy (Prysm, lighthouse, nimbus, etc.)
#   client:
#     enabled: true
#     image:
#       _default: gcr.io/prysmaticlabs/prysm/beacon-chain:stable
#     # command: '["sh","./root/init.sh"]'
#     args: '["--goerli", "--datadir=/data", "--jwt-secret=/geth/geth/jwtsecret", "--rpc-host=0.0.0.0", "--grpc-gateway-host=0.0.0.0", "--monitoring-host=0.0.0.0", "--execution-endpoint=http://geth-svc:8545", "--checkpoint-sync-url=https://goerli.checkpoint-sync.ethdevops.io", "--genesis-beacon-api-url=https://goerli.checkpoint-sync.ethdevops.io"]'
#     ports:
#       port-tcp:
#         number: 13000
#         protocol: TCP
#       port-udp:
#         number: 12000
#         protocol: UDP
#       port-rpc:
#         number: 4000
#         protocol: TCP
#       port-rpc-gtw:
#         number: 3500
#         protocol: TCP
#       port-monitoring:
#         number: 8080
#         protocol: TCP
#     persistence:
#       enabled: false
#       mountPath: path
#       storageClass: gp3-new
#       storage: 100Gi
#     files:
#       enabled: false
#       list: {}
#     service:
#       # ClusterIP, NodePort or LoadBalancer
#       type: ClusterIP
#     # enable ingress
#     ingress:
#       enabled: false
#       host:
#       # enable https
#       tls:
#         enabled: false
#     environment: {}
#     resources:
#       limits:
#         memory:
#           _default: "6Gi"
#         cpu:
#           _default: "3"
#       requests:
#         memory:
#           _default: "6Gi"
#         cpu:
#           _default: "3"
# enable Smart-contract-verifier deploy
scVerifier:
  enabled: true
  image:
    _default: ghcr.io/blockscout/smart-contract-verifier:latest
  replicas:
    app: 1
  docker:
    port: 80
    targetPort: 8043
    metricsPort: 6060
  service:
    # ClusterIP, NodePort or LoadBalancer
    type: ClusterIP
  # enable ingress
  ingress:
    enabled: true
    host:
      _default: verifier.test.blockscout.aws-k8s.blockscout.com
    # enable https
    tls:
      enabled: true
  resources:
    limits:
      memory:
        _default: "0.5Gi"
      cpu:
        _default: "0.25"
    requests:
      memory:
        _default: "0.5Gi"
      cpu:
        _default: "0.25"
  # node label
  nodeSelector:
    enabled: true
    app: blockscout
  # probes
  livenessProbe:
    enabled: true
    path: /health
  readinessProbe:
    enabled: true
    path: /health
  # enable Horizontal Pod Autoscaler
  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    cpuTarget: 90
  environment:
    SMART_CONTRACT_VERIFIER__SERVER__ADDR:
      _default: 0.0.0.0:8043
    # SMART_CONTRACT_VERIFIER__SOLIDITY__ENABLED:
    #   _default: 'true'
    SMART_CONTRACT_VERIFIER__SOLIDITY__COMPILERS_DIR:
      _default: /tmp/solidity-compilers
    SMART_CONTRACT_VERIFIER__SOLIDITY__REFRESH_VERSIONS_SCHEDULE:
      _default: 0 0 * * * * *
    # It depends on the OS you are running the service on
    # SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__LIST__LIST_URL:
    #   _default: https://solc-bin.ethereum.org/linux-amd64/list.json
    #SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__LIST__LIST_URL=https://solc-bin.ethereum.org/macosx-amd64/list.json
    #SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__LIST__LIST_URL=https://solc-bin.ethereum.org/windows-amd64/list.json
    SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__S3__REGION:
      _default: ""
    SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__S3__ENDPOINT:
      _default: https://storage.googleapis.com
    SMART_CONTRACT_VERIFIER__SOURCIFY__ENABLED:
      _default: 'true'
    SMART_CONTRACT_VERIFIER__SOURCIFY__API_URL:
      _default: https://sourcify.dev/server/
    SMART_CONTRACT_VERIFIER__SOURCIFY__VERIFICATION_ATTEMPTS:
      _default: 3
    SMART_CONTRACT_VERIFIER__SOURCIFY__REQUEST_TIMEOUT:
      _default: 10
    SMART_CONTRACT_VERIFIER__METRICS__ENABLED:
      _default: 'true'
    SMART_CONTRACT_VERIFIER__METRICS__ADDR:
      _default: 0.0.0.0:6060
    SMART_CONTRACT_VERIFIER__METRICS__ROUTE:
      _default: /metrics
    SMART_CONTRACT_VERIFIER__JAEGER__ENABLED:
      _default: 'false'
frontend:
  app: blockscout
  enabled: true
  image:
    _default: ghcr.io/blockscout/frontend:main
  replicas:
    app: 1
  docker:
    port: 80
    targetPort: 3000
  ingress:
    enabled: true
    # annotations:
    #   - 'nginx.ingress.kubernetes.io/use-regex: "true"'
    host:
      _default: frontend.test.blockscout.aws-k8s.blockscout.com
    # enable https
    tls:
      enabled: true
    path:
      exact:
        # - "/(apps|auth/profile|account)"
        - "/"
      prefix:
        - "/apps"
        - "/_next"
        - "/node-api"
        - "/static"
        - "/auth/profile"
        - "/account"
        - "/txs"
        - "/tx"
        - "/blocks"
        - "/block"
  resources:
    limits:
      memory:
        _default: "0.3Gi"
      cpu:
        _default: "0.2"
    requests:
      memory:
        _default: "0.3Gi"
      cpu:
        _default: "0.2"
  # node label
  nodeSelector:
    enabled: true
    app: blockscout
  environment:
    # ui config
    NEXT_PUBLIC_FEATURED_NETWORKS:
      _default: "[{'title':'Gnosis Chain','url':'https://blockscout.com/xdai/mainnet','group':'mainnets','type':'xdai_mainnet'},{'title':'Optimism on Gnosis Chain','url':'https://blockscout.com/xdai/optimism','group':'mainnets','icon':'https://www.fillmurray.com/60/60','type':'xdai_optimism'},{'title':'Arbitrum on xDai','url':'https://blockscout.com/xdai/aox','group':'mainnets'},{'title':'Ethereum','url':'https://blockscout.com/eth/mainnet','group':'mainnets','type':'eth_mainnet'},{'title':'Ethereum Classic','url':'https://blockscout.com/etx/mainnet','group':'mainnets','type':'etc_mainnet'},{'title':'POA','url':'https://blockscout.com/poa/core','group':'mainnets','type':'poa_core'},{'title':'RSK','url':'https://blockscout.com/rsk/mainnet','group':'mainnets','type':'rsk_mainnet'},{'title':'Gnosis Chain Testnet','url':'https://blockscout.com/xdai/testnet','group':'testnets','type':'xdai_testnet'},{'title':'POA Sokol','url':'https://blockscout.com/poa/sokol','group':'testnets','type':'poa_sokol'},{'title':'ARTIS Σ1','url':'https://blockscout.com/artis/sigma1','group':'other','type':'artis_sigma1'},{'title':'LUKSO L14','url':'https://blockscout.com/lukso/l14','group':'other','type':'lukso_l14'},{'title':'Astar','url':'https://blockscout.com/astar','group':'other','type':'astar'}]"
    NEXT_PUBLIC_NETWORK_EXPLORERS:
      _default: "[{'title':'Etherscan','baseUrl':'https://goerli.etherscan.io','paths':{'tx':'/tx'}}]"
    # network config
    NEXT_PUBLIC_NETWORK_NAME:
      _default: Ethereum
    NEXT_PUBLIC_NETWORK_SHORT_NAME:
      _default: Goerli
    NEXT_PUBLIC_NETWORK_ASSETS_PATHNAME:
      _default: ethereum
    NEXT_PUBLIC_NETWORK_TYPE:
      _default: goerli
    NEXT_PUBLIC_NETWORK_ID:
      _default: 5
    NEXT_PUBLIC_NETWORK_CURRENCY_NAME:
      _default: Ether
    NEXT_PUBLIC_NETWORK_CURRENCY_SYMBOL:
      _default: ETH
    NEXT_PUBLIC_NETWORK_CURRENCY_DECIMALS:
      _default: 18
    NEXT_PUBLIC_NETWORK_TOKEN_ADDRESS:
      _default: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
    NEXT_PUBLIC_IS_ACCOUNT_SUPPORTED:
      _default: true
    NEXT_PUBLIC_NETWORK_VERIFICATION_TYPE:
      _default: validation
    NEXT_PUBLIC_MARKETPLACE_SUBMIT_FORM:
      _default: https://airtable.com/shrqUAcjgGJ4jU88C
    NEXT_PUBLIC_MARKETPLACE_APP_LIST:
      _default: "[{'author': 'Blockscout', 'id': 'token-approval-tracker', 'title': 'Token Approval Tracker', 'logo': 'https://approval-tracker.vercel.app/icon-192.png', 'categories': ['security', 'tools'], 'shortDescription': 'Token Approval Tracker shows all approvals for any ERC20-compliant tokens and NFTs and lets to revoke them or adjust the approved amount.', 'site': 'https://docs.blockscout.com/for-users/blockscout-apps/token-approval-tracker', 'description': 'Token Approval Tracker shows all approvals for any ERC20-compliant tokens and NFTs and lets to revoke them or adjust the approved amount.', 'url': 'https://approval-tracker.vercel.app/'},{'author': 'Revoke', 'id': 'revoke.cash', 'title':'Revoke.cash', 'logo': 'https://revoke.cash/assets/images/revoke.svg', 'categories': ['security', 'tools'], 'shortDescription': 'Revoke.cash comes in as a preventative tool to manage your token allowances and practice proper wallet hygiene. By regularly revoking active allowances you reduce the chances of becoming the victim of allowance exploits.', 'site': 'https://revoke.cash/about', 'description': 'Revoke.cash comes in as a preventative tool to manage your token allowances and practice proper wallet hygiene. By regularly revoking active allowances you reduce the chances of becoming the victim of allowance exploits.', 'url': 'https://revoke.cash/'},{'author': 'Hop', 'id': 'hop-exchange', 'title': 'Hop', 'logo': 'https://goerli.hop.exchange/static/media/hop-logo-black.36655970.svg', 'categories': ['tools'], 'shortDescription': 'Hop is a scalable rollup-to-rollup general token bridge. It allows users to send tokens from one rollup or sidechain to another almost immediately without having to wait for the networks challenge period.', 'site': 'https://help.hop.exchange/hc/en-us/articles/4405172445197-What-is-Hop-Protocol-', 'description': 'Hop is a scalable rollup-to-rollup general token bridge. It allows users to send tokens from one rollup or sidechain to another almost immediately without having to wait for the networks challenge period.', 'url': 'https://goerli.hop.exchange'}, {'author': 'Aave', 'id': 'aave', 'title': 'Aave', 'logo': 'https://staging.aave.com/aaveLogo.svg', 'categories': ['tools'], 'shortDescription': 'Aave is a decentralised non-custodial liquidity market protocol where users can participate as suppliers or borrowers. Suppliers provide liquidity to the market to earn a passive income, while borrowers are able to borrow in an overcollateralised (perpetually) or undercollateralised (one-block liquidity) fashion.', 'site': 'https://docs.aave.com/faq/', 'description': 'Aave is a decentralised non-custodial liquidity market protocol where users can participate as suppliers or borrowers. Suppliers provide liquidity to the market to earn a passive income, while borrowers are able to borrow in an overcollateralised (perpetually) or undercollateralised (one-block liquidity) fashion.', 'url': 'https://staging.aave.com/'}]"
    # api config
    NEXT_PUBLIC_API_BASE_PATH:
      _default: /
    NEXT_PUBLIC_BLOCKSCOUT_VERSION:
      _default: v4.1.8-beta
    NEXT_PUBLIC_FOOTER_GITHUB_LINK:
      _default: https://github.com/blockscout/blockscout
    NEXT_PUBLIC_FOOTER_TWITTER_LINK:
      _default: https://www.twitter.com/blockscoutcom
    NEXT_PUBLIC_APP_ENV:
      _default: stable
    NEXT_PUBLIC_APP_INSTANCE:
      _default: unknown
    NEXT_PUBLIC_API_HOST:
      _default: blockscout.com/eth/goerli
    NEXT_PUBLIC_APP_HOST:
      _default: blockscout.com/eth/goerli
    NEXT_PUBLIC_LOGOUT_URL:
      _default: https://blockscoutcom.us.auth0.com/v2/logout
    NEXT_PUBLIC_LOGOUT_RETURN_URL:
      _default: https://blockscout.com/auth/logout
    NEXT_PUBLIC_HOMEPAGE_CHARTS:
      _default: "['daily_txs','coin_price','market_cup']"
